<%- include("../user/layouts/header.ejs") %>
<style>
    .button-container input[type="button"] {
    color: white;
    background-color: black;
    width: auto;
    display: inline-block;
    margin-right: 10px;
}

.button-container input[type="button"]:last-child {
    margin-right: 0; /* Remove the margin from the last button */
}
coupon {
    border: 2px dashed #ccc;
    padding: 10px;
    text-align: center;
    max-width:auto;
    margin: 20px auto;
    position: relative;
    overflow: hidden;
}
.selected {
 background-color: rgb(128, 128, 206);
 color: white; 
}



.scratch-card {
    position: absolute;
    margin-top: 20px;
    cursor: pointer;
}
.scratch-overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgb(27, 27, 27); /* Color of the scratch layer */
}
.coupon-code {
    position: relative;
    z-index: 1;
}
.hidden-code {
    visibility: hidden;
}
.scratch-card {
    position: relative;
    overflow: hidden;
}
.scratch-overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-image: url('path/to/your/scratch-overlay-image.png');
    background-size: cover;
    pointer-events: none;
}
.hidden-code {
    visibility: hidden;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 24px;
    color: #000;
}
.scratch-text {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 24px;
    color: #ccc;
}


    .cart-summary-table {
        width: 100%;
        border-collapse: collapse;
        margin-bottom: 20px;
    }

    .cart-summary-table th,
    .cart-summary-table td {
        padding: 8px;
        text-align: left;
    }

    .cart-summary-table th {
        background-color: #f2f2f2;
    }

  

    .card-title {
    font-size: 18px;
    margin-bottom: 0;
}

.card-text {
    margin-bottom: 5px;
}

.address-item {
    background-color: #f8f9fa;
    border: 1px solid #dee2e6;
    border-radius: 5px;
    margin-bottom: 15px;
    padding: 15px;
    transition: all 0.3s ease;
    display: flex;
    flex-direction: column;
    width: auto;
}

.address-item .card-body {
    padding: 0;
}

.address-details {
    display: flex;
    flex-wrap: wrap;
}

.address-details span {
    margin-right: 10px;
}

.card-title span {
    font-size: 1rem;
    margin-left: 10px;
}
 
.suggestions {
    border: 1px solid #ccc;
    border-radius: 4px;
    padding: 5px;
    margin-top: 5px;
    max-height: 100px;
    overflow-y: auto;
}

.suggestion {
    cursor: pointer;
    padding: 5px;
    border-bottom: 1px solid #eee;
}

.suggestion:last-child {
    border-bottom: none;
}



    /* Styling for card title */
   
</style>

<!-- Start Breadumb Area -->
<div
    class="breadcumb-area ptb--100 ptb_md--100 ptb_sm--100  bg_image bg_image--3" style="margin-top: 7rem;">
    <div class="container">
        <div class="row">
            <div class="col-lg-12">
                <div class="inner text-center">
                    <h2 class="font--40 mb--0">Checkout</h2>
                </div>
            </div>
        </div>
    </div>
</div>
<div id="checkout-container">
<form id="checkout-form">
    <div class="main-wrapper">
        <div class="checkout_area pt--120 pt_md--80 pt_sm--80 pb--60 bg-color"
            data-bg-color="#ffffff">
            <div class="container ">
                <div class="row">
                    <div class="col-lg-6">
                        <div class="col-lg-12 mb-4">
                            <button  id="addAddressButton" > <a href="/profile">add address</a></button>
                        </div>
                       
                        <!-- Add Address Modal -->
                      
                        <h3>your Address</h3>
                        <div class="row">

                            <% if (addressData && addressData.address &&
                            addressData.address.length > 0) { %>
                            <% addressData.address.forEach((address, index) => {
                            %>
                            <div class="col-lg-12">
                                <div class="address-item card">
                                    <div class="card-body">
                                        <div class="row">
                                            <div class="col-lg-9">
                                        <h3 class="card-title">Address <%= index + 1 %>: <span><%= address.fullName %></span></h3>
                                        <p class="card-text address-details">
                                            <span><%= address.mobile %>,</span>
                                            <span><%= address.state %>,</span>
                                            <span><%= address.city %>,</span>
                                            <span><%= address.pin %>,</span>
                                            <span><%= address.houseName %></span>
                                        </p>
                                    </div>
                                    <div class="col-lg-3">

                                        <div style="display:flex; flex-direction: column; justify-content: center; align-items: center; gap: 1rem;">
                                            <input type="radio" name="address" value='<%= JSON.stringify(address) %>' <%= index === 0 ? 'checked' : '' %> />
                                            <a href="#" onclick="showEditAddressModal('<%= address.fullName %>','<%= address.mobile %>', '<%= address.email %>', '<%= address.houseName %>', '<%= address.city %>', '<%= address.state %>',  '<%= address.pin %>','<%= address._id %>')" class="edit-link" data-toggle="modal" data-target="#editAddressModal"> <i class="fa-sharp fa-solid fa-pen" style="color: #cc9966;"></i>edit</a>
                                        </div>
                                    </div>
                                    </div>
                                </div>
                                </div>
                            </div>

                            <div class="modal fade"
                            id="editAddressModal"
                            tabindex="-1"
                            role="dialog"
                            aria-labelledby="exampleModalLabel"
                            aria-hidden="true"
                            style="padding-top: 80px;">
                            <div
                                class="modal-dialog"
                                role="document">
                                <div
                                    class="modal-content">
                                    <div
                                        class="modal-header">
                                        <h5
                                            class="modal-title"
                                            id="exampleModalLabel">edit
                                            Address</h5>
                                        <button
                                            type="button"
                                            class="close"
                                            data-dismiss="modal"
                                            aria-label="Close">
                                            <span
                                                aria-hidden="true">&times;</span>
                                        </button>
                                    </div>
                                    <div
                                        class="modal-body">
                                        <form
                                            id="editAddressform"
                                            class="row gx-2">
                                            <div
                                                class="form-group col-md-6">
                                                <label
                                                    for="fullname">Full
                                                    Name
                                                    *</label>
                                                <input
                                                    type="text"
                                                    class="form-control"
                                                    name="fullname"
                                                    id="fullnames"
                                                    required>
                                               <p id="error-name"  style="display: none; color: red;"></p>
                                            </div>

                                            <div
                                                class="form-group col-md-6">
                                                <label
                                                    for="mobile">Mobile
                                                    *</label>
                                                <input
                                                    type="tel"
                                                    class="form-control"
                                                    name="mobile"
                                                    id="mobiles"
                                                    required>
                                                <p id="error-mobile"  style="display: none; color: red;"></p>
                                            </div>

                                            <div
                                                class="form-group col-md-12">
                                                <label
                                                    for="email">Email
                                                    *</label>
                                                <input
                                                    type="email"
                                                    class="form-control"
                                                    name="email"
                                                    id="emails"
                                                    >
                                               <p id="error-email"  style="display: none; color: red;"></p>
                                            </div>

                                            <div
                                                class="form-group col-md-12">
                                                <label
                                                    for="house">House
                                                    Name
                                                    *</label>
                                                <input
                                                    type="text"
                                                    class="form-control"
                                                    name="houseName"
                                                    id="houseNames"
                                                    >
                                               <p id="error-housename"  style="display: none; color: red;"></p>
                                                <input
                                                    type="text"
                                                    class="form-control"
                                                    style="display: none;"
                                                    id="addressId"
                                                    name="addressId">
                                            </div>

                                            <div
                                                class="form-group col-md-4">
                                                <label
                                                    for="state">State
                                                    *</label>
                                                <input
                                                    type="text"
                                                    class="form-control"
                                                    name="state"
                                                    id="states"
                                                    >
                                               <p id="error-state"  style="display: none; color: red;"></p>
                                            </div>

                                            <div
                                                class="form-group col-md-4">
                                                <label
                                                    for="city">City
                                                    *</label>
                                                <input
                                                    type="text"
                                                    class="form-control"
                                                    name="city"
                                                    id="citys"
                                                    >
                                                <p id="error-city"  style="display: none; color: red;"></p>
                                            </div>

                                            <div
                                                class="form-group col-md-4">
                                                <label
                                                    for="pincode">Pincode
                                                    *</label>
                                                <input
                                                    type="tel"
                                                    class="form-control"
                                                    name="pincode"
                                                    id="pincodes"
                                                    autocomplete="off"
                                                    >
                                               <p id="error-pin"  style="display: none; color: red;"></p>
                                            </div>

                                            <div
                                                class="form-group col-md-12">
                                                <button
                                                    id="editAddress"
                                                    type="submit"
                                                    class="btn btn-outline-primary">
                                                    <span>Add
                                                        Address</span>
                                                    <i
                                                        class="icon-long-arrow-right"></i>
                                                </button>
                                            </div>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </div>
                            
                            
                            <% }) %>
                            <% } else { %>
                         
                            <% } %>
                        </div>
                        <div class="flex-w flex-m m-r-18 m-tb-5">
            
            <!-- Button trigger modal -->
          <button type="button" class="flex-c-m stext-101 cl2 size-105 bg8 bor13 hov-btn3 p-lr-15 trans-04 pointer m-tb-5" data-bs-toggle="modal" data-bs-target="#exampleModal">
            View Coupons
          </button>
        
            <!-- Modal -->
          <div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog" style="margin-top: 100px;">
              <div class="modal-content">
                <div class="modal-header">
                  <h5 class="modal-title" id="exampleModalLabel">Available Coupons</h5>
                  <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <%if(coupons && coupons.length){ %>
                  <%coupons.forEach((coupon,index)=> { %>
                    <div class="modal-body" style="margin-left: 10px;">
                      <div class="form-check">
                        <input class="form-check-input" type="radio" value="<%= coupon.couponCode %>" id="code<%= index %>">
                        <label class="form-check-label" for="code<%= index %>">
                          <strong><%= coupon.couponCode %></strong><br>
                          <label for="">Discount Percentage:</label>
                          <strong><%= coupon.discountAmount %>%</strong><br>
                          <label for="">Up to:</label>
                          <strong><%= coupon.maxAmount %>off</strong>


                        <br>
                         
                        </label>
                      </div>
                    </div>
                    <%}); %>
                <%}else{%>
                  <span> No coupon available !!</span>
                <%} %>
                <div class="modal-footer">
                  <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">OK</button>
                </div>
              </div>
            </div>
          </div>
          <input class="stext-104 cl2 plh4 size-105 bor13 p-lr-20 m-r-10 m-tb-5" type="text" name="coupon" id="coupon" placeholder="Coupon Code">
            <span id="couponErr" class="text-danger pl-4" style="display: none;">Please Enter a valid coupon code.</span>
            <button type="button" id="applyCoupon"  class="flex-c-m stext-101 cl2 size-105 bg8 bor13 hov-btn3 p-lr-15 trans-04 pointer m-tb-5">
              Apply coupon
            </button>
            <button type="button" id="removeCoupon"  class="flex-c-m stext-101 cl2 size-105 bg8 bor13 hov-btn3 p-lr-15 trans-04 pointer m-tb-5">
              Remove coupon
            </button>
          
        </div>
                        
                    </div>
                    
  
                    <div class="col-lg-6">
                        <div class="mb--60">
                            
       
                          
                            <div class="checkout-cart-total">
                                <h4 class="checkout-title" style="text-decoration: none;">CART TOTAL</h4>
                                <div class="card">
                                    <table class="cart-summary-table">
                                       
                                        <thead>
                                            <tr>
                                                <th scope="col">PRODUCT</th>
                                                <th scope="col">TOTAL</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <% cart.products.forEach((product,index) => { %>
                                                <tr>
                                                    <td><%= product.productId.name %>x<%=product.count %></td>
                                                    <td>₹<%= eachTotal[index].toFixed(2) %></td>
                                                </tr>
                                            <% }); %>
                                            <tr>
                                              
                                                <td id="total"><% subTotal  %></td>
                                            </tr>
                                           <tr>
                                            <td>Coupon Discount</td>
                                            <td id="discount"><%totalDiscount%></td></tr>
                                                
                                            
                                            
                                            <tr>
                                                <td>GRAND TOTAL</td>
                                                <td id="grandtotal">₹<%= cart.totalPrice %></td>
                                            </tr>
                                        </tbody>
                                        
                                    </table>
                                    <div style="padding: 15px;">
                                        <h4 class="checkout-title ">PAYMENT
                                            METHOD</h4>
                                        <div class="single-method">
                                            <!-- Payment method options go here -->
                                            <div>
                                                <% if( cart.totalPrice <= 1000) { %>
                                                    <input type="radio" id="COD" name="payment" value="COD" checked>
                                                    <label for="COD" style="font-weight: bold;">Cash on Delivery</label>
                                                <% } else { %>
                                                    <input type="radio" id="COD" name="payment" value="COD" disabled>
                                                    <label for="COD" style="font-weight: bold; color: gray;">Cash on Delivery (Unavailable for orders above Rs 1000)</label>
                                                <% } %>
                                            </div>
                                            
                                            <div>
                                                <input type="radio" id="razorpay" name="payment" value="razorpay">
                                                <label for="razorpay" style="font-weight: bold;">razorpay</label>
                                            </div>
                                            <div>
                                                <input type="radio" id="wallet" name="payment" value="wallet">
                                                <label for="wallet" style="font-weight: bold;">wallet</label>
                                            </div>
                                           
                                         
                                        </div>

                                        <div style="text-align: center;">
                                            <button type="button" id="place-order"
                                                class="place-order">Place
                                                Order</button>
                                        </div>
                                        <!-- <div class="cart-summary-button" style="margin-top: 20px;">
                                            <a class="flex-c-m stext-101 cl0 size-90 bg1 bor1 hov-btn1 p-lr-15 trans-04"  href="/checkout">
                                                Checkout
                                            </a>
                                            
                                        </div> -->
                                    </div>
                                </div>

                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </form>

  
     </div>               
    </div>
<br>
<br>
    <!--// Quick View Modal -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.css">
    <script src="https://code.jquery.com/jquery-3.2.1.min.js"></script>
     <!-- Your custom script -->
    <script src="path/to/your/script.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
     <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
     <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>




const isNotEmpty = (value) => value.trim() !== "";
const isValidEmail = (value) => /^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(value);
const isValidPhone = (value) => /^\d{10}$/.test(value); 
const isValidPincode = (value) => /^\d{6}$/.test(value);


function validateInput(inputId, errorId, validationFunction) {
    const input = document.getElementById(inputId);
    const error = document.getElementById(errorId);
   

    if (!validationFunction(input.value)) {
        error.style.color = "red";
        error.textContent = "This field is required."; 
        return false;
    }
    return true;
}

document.getElementById("place-order").addEventListener("click", (e) => {
    e.preventDefault();

    const selectedAddress = $("input[name='address']:checked").val();
    let address = {};

    
    if (!selectedAddress) {
        const nameValid = validateInput("name", "nameError", isNotEmpty);
        const emailValid = validateInput("email", "emailError", isValidEmail);
        const mobileValid = validateInput("mobile", "mobileError", isValidPhone);
        const pincodeValid = validateInput("pincode", "pincodeError", isValidPincode);
        const cityValid = validateInput("city", "cityError", isNotEmpty);
        const stateValid = validateInput("state", "stateError", isNotEmpty);
        const houseNameValid = validateInput("houseName", "houseError", isNotEmpty);
        
        if (!nameValid || !emailValid || !mobileValid || !pincodeValid || !cityValid || !stateValid || !houseNameValid) {
            return; 
        }

        address = {
            fullName: document.getElementById("name").value,
            email: document.getElementById("email").value,
            mobile: document.getElementById("mobile").value,
            pin: document.getElementById("pincode").value,
            state: document.getElementById("state").value,
            city: document.getElementById("city").value,
            houseName: document.getElementById("houseName").value
        };
    } else {
        address = JSON.parse(selectedAddress);
    }
 

    const paymentMethod = $("input[name='payment']:checked").val();
    const formData = {
        address: address,
        payment: paymentMethod,
    };
    console.log(formData)
    

                    $.ajax({
                        url: "/place-order",
                        method: "POST",
                        contentType: 'application/json',
                        data: JSON.stringify({ formData }),
                        success: (response) => {
                            console.log('response from front',response);
                            if(response.stock){
                                Swal.fire({
                                title: "bad requestttt!",
                                text:"product is out of stock ,plese remove out of stock product for your place holder",
                                icon: "warning"
                                });               
                            }else if (response.priceError) {
            Swal.fire({
                icon: "error",
                text: "Every product should be priced above 1000."
            });
        }
                            else if(response.appliedCouponError){
                                Swal.fire({
                                    icon:"error",
                                    text:"you have error with applied coupon,please check the coupon criteria!"
                                })
                            }
                             else if (response.codsuccess == true) {
                                Swal.fire({
                                icon: "success",
                                title:"cash on delivery",
                                text:"order success",
                                timer: 3000
                                }).then(()=> {        
                                    window.location.href = `/order-success`;
                                });
                            }else if(response.wallet){
                                Swal.fire({
                                icon: "success",
                                title:"wallet",
                                text:"order success",
                                timer: 3000
                                }).then(()=> {        
                                    window.location.href = `/order-success`;
                                });   
                            }else if(response.walletAmount ){
                                Swal.fire({
                                icon: "error",
                                text:"wallet amount not enough",
                                })  
                        }else if(response.razorpay ){
                            console.log('data.order:',response.order);
                            razorpayPayment(response.order);
                        }
                        },
                    });
                }
                
            );


            function razorpayPayment(order){

var options = {
    "key": "rzp_test_lnTkNqNJu0QGWt", 
    "amount":order.amount, 
    "currency": "INR",
    "name": "cozastore", 
    "description": "Test Transaction",
    "image": "https://example.com/your_logo",
    "order_id":order.id, 
    
    "handler": function (response){                              
        console.log('response:',response);
        verifyPayment(response,order);
    },
    "prefill": { 
        "name": "Afeeda", 
        "email": "apafeeda@gmail.com", 
       
    },
   
};
var rzp1 = new Razorpay(options);
console.log('razorpayy   ',rzp1);
rzp1.on('payment.failed', function (response){
    alert('payment failed');
    window.location.href=`/order-failure?id=${order.receipt}`
});

rzp1.open();
}

function verifyPayment(response,order){
        fetch('/verify-payment',{
            method:"POST",
            headers:{
                "content-type": "application/json;charset=utf-8"
            },
            body:JSON.stringify({
                response,
                order
            })
        })
        .then((res)=>res.json())
        .then((data)=>{
            if(data.statusChanged){
                console.log('iffididd');
                window.location.href=`/order-success`
            }
        })   
    }



    function showDiscountModal() {
        $('#discountModal').modal('show');
    }
    function closeModal() {
        $('#discountModal').modal('hide');
    }
  

    function showEditAddressModal(
  fullname,
  mobile,
  email,
  houseName,
  city,
  state,
  pincode,
  addressId,
) {
  document.getElementById('fullnames').value = fullname
  document.getElementById('emails').value = email
  document.getElementById('mobiles').value = mobile
  document.getElementById('states').value = state
  document.getElementById('citys').value = city
  document.getElementById('pincodes').value = pincode
  document.getElementById('houseNames').value = houseName
  document.getElementById('addressId').value = addressId


  $('#editAddressModal').modal('show')
}

document.getElementById('editAddress').addEventListener('click', function (e) {
    e.preventDefault();

    
    const editAddressId = document.getElementById('addressId').value;
    const fullname = document.getElementById('fullnames').value;
    const pin = document.getElementById('pincodes').value;
    const mobile = document.getElementById('mobiles').value;
    const email = document.getElementById('emails').value;
    const houseName = document.getElementById('houseNames').value;
    const city = document.getElementById('citys').value;
    const state = document.getElementById('states').value;

    console.log('fullbbbbbbbbbb',fullname,pin,mobile,email,houseName,city,state);
    console.log('fulssname',fullname);
    
  
    const nameError = document.getElementById('error-name');
    const pinError = document.getElementById('error-pin');
    const phoneError = document.getElementById('error-mobile');
    const addEmailError = document.getElementById('error-email');
    const houseError = document.getElementById('error-housename');
    const cityError = document.getElementById('error-city');
    const stateError = document.getElementById('error-state');
    console.log('addreddddddsssssssss',fullname ,editAddressId,mobile,pin,email);

    // Regular expressions for validation
    const emailPattern = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,4}$/;
    const mobilePattern = /^\d{10}$/;
    const namePattern = /^[a-zA-Z\s]+$/;
    const pincodePattern = /^\d{6}$/;

    if (fullname.trim() === '') {
      nameError.style.display = 'block';
      nameError.textContent = 'Name is required.';
    } else if (!namePattern.test(fullname)) {
      nameError.style.display = 'block';
      nameError.textContent = 'Full name should contain only alphabets.';
    } else if (fullname.length < 3) {
      nameError.style.display = 'block';
      nameError.textContent = 'Full name should be at least 3 characters long.';
    } else if (pin.trim() === '') {
      pinError.style.display = 'block';
      pinError.textContent = 'Pincode is required.';
    } else if (!pincodePattern.test(pin)) {
      pinError.style.display = 'block';
      pinError.textContent = 'Enter a valid pincode.';
    } else if (mobile.trim() === '') {
      phoneError.style.display = 'block';
      phoneError.textContent = 'Phone number is required.';
    } else if (!mobilePattern.test(mobile)) {
      phoneError.style.display = 'block';
      phoneError.textContent = 'Enter a valid phone number (10 digits).';
    } else if (email.trim() === '') {
      addEmailError.style.display = 'block';
      addEmailError.textContent = 'Email is required.';
    } else if (!emailPattern.test(email)) {
      addEmailError.style.display = 'block';
      addEmailError.textContent = 'Enter a valid email address.';
    } else if (houseName.trim() === '') {
      houseError.style.display = 'block';
      houseError.textContent = 'House name is required.';
    } else if (city.trim() === '') {
      cityError.style.display = 'block';
      cityError.textContent = 'City name is required.';
    } else if (state.trim() === '') {
      stateError.style.display = 'block';
      stateError.textContent = 'State name is required.';
    } else {
     
      $.ajax({
        url: '/edit-address',
        data: {
          fullname: fullname,
          editAddressId: editAddressId,
          email: email,
          mobile: mobile,
          houseName: houseName,
          city: city,
          state: state,
          pincode: pin
        },
        method: 'POST',
        success: (response) => {
          console.log(response, 'check the response');
          if (response.success) {
            $('#editAddressModal').modal('hide');
      

            const Toast = Swal.mixin({
              toast: true,
              position: 'top-end',
              showConfirmButton: false,
              timer: 3000
            });

            Toast.fire({
              icon: 'success',
              title: 'Billing address updated successfully.'
            });

            setTimeout(() => {
              window.location.reload('/profile');
            }, 2000);
          } else {
            const Toast = Swal.mixin({
              toast: true,
              position: 'top-end',
              showConfirmButton: false,
              timer: 2000
            });

            Toast.fire({
              icon: 'error',
              title: 'Oops! Try again.'
            });
          }
        },
        error: function(xhr, status, error) {
          console.error(xhr.responseText);
        }
      });
    }
  });

</script>
<script>
 
document.addEventListener('DOMContentLoaded', function() {
    const modalBody = document.querySelector('#exampleModal');
    modalBody.addEventListener('change', function(event) {
        if (event.target.type === 'radio' && event.target.checked) {
            const couponCode = event.target.value;
            const couponInput = document.getElementById('coupon');
            couponInput.value = couponCode;
        }
    });

    const couponInput = document.getElementById('coupon');
    document.getElementById('applyCoupon').addEventListener('click', function() {
        const couponValue = couponInput.value.trim(); 
        console.log(couponValue); 
        
        if (couponValue === "") {
            document.getElementById('couponErr').style.display = 'block';
        } else {
            const subTotal = document.getElementById("total").innerText.replace('₹', '').trim();
            const discountAmount = document.getElementById('discount').innerText.replace('₹', '').trim();
            const discountedTotal = document.getElementById("grandtotal").innerText.replace('₹', '').trim();

            console.log("amount:", subTotal, discountAmount, discountedTotal);

            fetch("/applyCoupon", {
                method: "POST",
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    couponCode: couponValue,
                    subtotal: subTotal,
                    discountedTotal: discountedTotal
                })
            })
            .then(response => response.json())
            .then(data => {
                console.log("apply coupon response", data);
                if (!data.success) {
                    if (data.user) {
                        swal({
                            icon: "info",
                            title: "Coupon already used by the user.",
                        });
                    } else {
                        swal({
                            icon: "warning",
                            title: data.message,
                        });
                    }
                } else {
                    document.getElementById('discount').innerText = '' + data.discountAmount;
                    document.getElementById('grandtotal').innerText = '₹' + data.discountedTotal;
                    swal({
                        icon: "success",
                        title: "Coupon applied to the order.",
                    });
                }
            })
            .catch(error => {
                console.error("Fetch Error: ", error);
            });
        }
    });
});
document.addEventListener('DOMContentLoaded', function() {
    const couponInput = document.getElementById('coupon');
    const removeCouponButton = document.getElementById('removeCoupon');

    removeCouponButton.addEventListener('click', function() {
        const couponValue = couponInput.value.trim();
        if (couponValue === "") {
            document.getElementById('couponErr').style.display = 'block';
        } else {
            removeCoupon(couponValue);
        }
    });

    async function removeCoupon(couponValue) {
        try {
            const response = await fetch("/removeCoupon", {
                method: "POST",
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ couponCode: couponValue })
            });

            const data = await response.json();

            if (data.success) {
                document.getElementById('discount').innerText = '0';
                document.getElementById('grandtotal').innerText = '₹' + data.newTotalPrice;
                swal({ icon: "success", title: "Coupon removed from the order." });
            } else {
                swal({ icon: "warning", title: data.message });
            }
        } catch (error) {
            console.error("Fetch Error: ", error);
        }
    }
});
</script>

 <!-- add address -->

 <script>
   
   document.addEventListener("DOMContentLoaded", () => {
    document.getElementById("addAddressForm").addEventListener("submit", function (event) {
        event.preventDefault();

        // Get form field values
        const name = document.getElementById("newFullName").value;
        const nameError = document.getElementById('nameError');
        const email = document.getElementById("newEmail").value;
        const emailError = document.getElementById("emailError");
        const mobile = document.getElementById('newMobile').value;
        const mobileError = document.getElementById('mobileError');
        const pincode = document.getElementById('newPincode').value;
        const pincodeError = document.getElementById('pincodeError');
        const state = document.getElementById('newState').value;
        const city = document.getElementById('newCity').value;
        const houseName = document.getElementById('newHouseName').value;

        // Validation patterns and checks
        const emailPattern = /^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;

        if (name.trim() === "") {
            nameError.style.display = "block";
            nameError.textContent = "Name is required.";
            return;
        } else if (name.length < 4) {
            nameError.style.display = "block";
            nameError.textContent = "User name must be at least 4 characters.";
            return;
        } else {
            nameError.style.display = "none";
        }

        if (email.trim() === "") {
            emailError.style.display = "block";
            emailError.textContent = "Email is required.";
            return;
        } else if (!emailPattern.test(email)) {
            emailError.style.display = "block";
            emailError.textContent = "Invalid email format.";
            return;
        } else {
            emailError.style.display = "none";
        }

        if (mobile.length != 10) {
            mobileError.style.display = "block";
            mobileError.textContent = "Mobile number must be at least 10 digits.";
            return;
        } else {
            mobileError.style.display = "none";
        }

        if (pincode.length != 6) {
            pincodeError.style.display = "block";
            pincodeError.textContent = "Type a 6 digit Pincode.";
            return;
        } else {
            pincodeError.style.display = "none";
        }

        // Prepare data for the AJAX call
        const formData = {
            name: name,
            email: email,
            mobile: mobile,
            pincode: pincode,
            state: state,
            city: city,
            houseName: houseName
        };

        // Make AJAX call to server to add the address
        axios.post('/add-address', formData)
            .then(response => {
                const Toast = Swal.mixin({
                    toast: true,
                    position: "top-end",
                    showConfirmButton: false,
                    timer: 3000,
                });
                if (response.data.addressAdded) {
                    Toast.fire({
                        icon: "success",
                        title: "Added",
                        text: "Your address was added successfully."
                    });
                    setTimeout(() => {
                        window.location.href = "/profile";
                    }, 2000);
                }
            })
            .catch(e => {
                console.log(e, "Error while passing the value from frontend");
            });
    });
});
 </script>
<script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
    


    
    
        
            
        

    <%- include("../user/layouts/footer.ejs") %>